{"uid":"11931a8bdb9ac87f","name":"test_query_project[2-3]","fullName":"tests.agent_trajectory.research_analyst#test_query_project","historyId":"dd91f21687fb22d86eafe282d5e5a6de","time":{"start":1730357511851,"stop":1730357515331,"duration":3480},"status":"failed","statusMessage":"AssertionError: assert 'DuckDuckGoSearchExecutor' == 'ProjectExecutor'\n  \n  - ProjectExecutor\n  + DuckDuckGoSearchExecutor","statusTrace":"research_analyst_agent = AgentExecutor(verbose=True, agent=RunnableMultiActionAgent(runnable=RunnableAssign(mapper={\n  agent_scratchpad: Runnab...rn_keys_arg=[], stream_runnable=True), tools=[DuckDuckGoSearchRun(name='DuckDuckGoSearchExecutor'), ProjectExecutor()])\n\n    @pytest.mark.asyncio\n    async def test_query_project(research_analyst_agent):\n        events = research_analyst_agent.astream_events(\n            {\"messages\": [HumanMessage(content=\"Do you know anything about RSS3?\", name=\"human\")]}, version=\"v1\"\n        )\n    \n        tool_end_count = 0\n    \n        async for event in events:\n            if event[\"event\"] == \"on_tool_end\":\n                event_data_input_ = event[\"data\"][\"input\"]\n>               assert event[\"name\"] == \"ProjectExecutor\"\nE               AssertionError: assert 'DuckDuckGoSearchExecutor' == 'ProjectExecutor'\nE                 \nE                 - ProjectExecutor\nE                 + DuckDuckGoSearchExecutor\n\nagent_trajectory/research_analyst.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"research_analyst_agent","time":{"start":1730357504075,"stop":1730357511809,"duration":7734},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop_policy","time":{"start":1730357504075,"stop":1730357504075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop","time":{"start":1730357511849,"stop":1730357511850,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 'DuckDuckGoSearchExecutor' == 'ProjectExecutor'\n  \n  - ProjectExecutor\n  + DuckDuckGoSearchExecutor","statusTrace":"research_analyst_agent = AgentExecutor(verbose=True, agent=RunnableMultiActionAgent(runnable=RunnableAssign(mapper={\n  agent_scratchpad: Runnab...rn_keys_arg=[], stream_runnable=True), tools=[DuckDuckGoSearchRun(name='DuckDuckGoSearchExecutor'), ProjectExecutor()])\n\n    @pytest.mark.asyncio\n    async def test_query_project(research_analyst_agent):\n        events = research_analyst_agent.astream_events(\n            {\"messages\": [HumanMessage(content=\"Do you know anything about RSS3?\", name=\"human\")]}, version=\"v1\"\n        )\n    \n        tool_end_count = 0\n    \n        async for event in events:\n            if event[\"event\"] == \"on_tool_end\":\n                event_data_input_ = event[\"data\"][\"input\"]\n>               assert event[\"name\"] == \"ProjectExecutor\"\nE               AssertionError: assert 'DuckDuckGoSearchExecutor' == 'ProjectExecutor'\nE                 \nE                 - ProjectExecutor\nE                 + DuckDuckGoSearchExecutor\n\nagent_trajectory/research_analyst.py:30: AssertionError","steps":[],"attachments":[{"uid":"62883562e0b83203","name":"stdout","source":"62883562e0b83203.txt","type":"text/plain","size":1924},{"uid":"c46b7874ae224b13","name":"stderr","source":"c46b7874ae224b13.txt","type":"text/plain","size":125}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"event_loop::3","time":{"start":1730357515337,"stop":1730357515338,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_close_event_loop","time":{"start":1730357515338,"stop":1730357515338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_restore_policy","time":{"start":1730357515338,"stop":1730357515338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_provide_clean_event_loop","time":{"start":1730357515338,"stop":1730357515338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"tests.agent_trajectory"},{"name":"suite","value":"research_analyst"},{"name":"host","value":"fv-az1567-680"},{"name":"thread","value":"5076-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.agent_trajectory.research_analyst"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"__pytest_repeat_step_number","value":"1"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["asyncio"]},"source":"11931a8bdb9ac87f.json","parameterValues":["1"]}