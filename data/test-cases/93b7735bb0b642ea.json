{"uid":"93b7735bb0b642ea","name":"test_query_defi_activities","fullName":"tests.agent_trajectory.feed_explore#test_query_defi_activities","historyId":"a1d36cef79e366426a5a00f9730dce39","time":{"start":1730343399080,"stop":1730343404178,"duration":5098},"status":"failed","statusMessage":"AssertionError: assert 'FeedExecutor' == 'DeFiExecutor'\n  \n  - DeFiExecutor\n  ? ^ ^^\n  + FeedExecutor\n  ? ^ ^^","statusTrace":"feed_explorer_agent = AgentExecutor(verbose=True, agent=RunnableMultiActionAgent(runnable=RunnableAssign(mapper={\n  agent_scratchpad: Runnab...ys_arg=[], stream_runnable=True), tools=[FeedExecutor(), FeedSourceExecutor(), DeFiExecutor(), TelegramNewsExecutor()])\n\n    @pytest.mark.asyncio\n    async def test_query_defi_activities(feed_explorer_agent):\n        events = feed_explorer_agent.astream_events(\n            {\"messages\": [HumanMessage(content=\"Show me recent DeFi activities for address 0x742d35Cc6634C0532925a3b844Bc454e4438f44e\", name=\"human\")]},\n            version=\"v1\",\n        )\n    \n        tool_end_count = 0\n        async for event in events:\n            if event[\"event\"] == \"on_tool_end\":\n                tool_end_count += 1\n                event_data_input_ = event[\"data\"][\"input\"]\n>               assert event[\"name\"] == \"DeFiExecutor\"\nE               AssertionError: assert 'FeedExecutor' == 'DeFiExecutor'\nE                 \nE                 - DeFiExecutor\nE                 ? ^ ^^\nE                 + FeedExecutor\nE                 ? ^ ^^\n\nagent_trajectory/feed_explore.py:30: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1730343397433,"stop":1730343397433,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"feed_explorer_agent","time":{"start":1730343397433,"stop":1730343399075,"duration":1642},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop","time":{"start":1730343399075,"stop":1730343399075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 'FeedExecutor' == 'DeFiExecutor'\n  \n  - DeFiExecutor\n  ? ^ ^^\n  + FeedExecutor\n  ? ^ ^^","statusTrace":"feed_explorer_agent = AgentExecutor(verbose=True, agent=RunnableMultiActionAgent(runnable=RunnableAssign(mapper={\n  agent_scratchpad: Runnab...ys_arg=[], stream_runnable=True), tools=[FeedExecutor(), FeedSourceExecutor(), DeFiExecutor(), TelegramNewsExecutor()])\n\n    @pytest.mark.asyncio\n    async def test_query_defi_activities(feed_explorer_agent):\n        events = feed_explorer_agent.astream_events(\n            {\"messages\": [HumanMessage(content=\"Show me recent DeFi activities for address 0x742d35Cc6634C0532925a3b844Bc454e4438f44e\", name=\"human\")]},\n            version=\"v1\",\n        )\n    \n        tool_end_count = 0\n        async for event in events:\n            if event[\"event\"] == \"on_tool_end\":\n                tool_end_count += 1\n                event_data_input_ = event[\"data\"][\"input\"]\n>               assert event[\"name\"] == \"DeFiExecutor\"\nE               AssertionError: assert 'FeedExecutor' == 'DeFiExecutor'\nE                 \nE                 - DeFiExecutor\nE                 ? ^ ^^\nE                 + FeedExecutor\nE                 ? ^ ^^\n\nagent_trajectory/feed_explore.py:30: AssertionError","steps":[],"attachments":[{"uid":"c1b9211e1391dffb","name":"stdout","source":"c1b9211e1391dffb.txt","type":"text/plain","size":785},{"uid":"dea3892177a2556f","name":"stderr","source":"dea3892177a2556f.txt","type":"text/plain","size":331}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"event_loop::3","time":{"start":1730343404185,"stop":1730343404185,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_close_event_loop","time":{"start":1730343404185,"stop":1730343404185,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_restore_policy","time":{"start":1730343404185,"stop":1730343404185,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_provide_clean_event_loop","time":{"start":1730343404185,"stop":1730343404186,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"tests.agent_trajectory"},{"name":"suite","value":"feed_explore"},{"name":"host","value":"fv-az1766-28"},{"name":"thread","value":"3571-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.agent_trajectory.feed_explore"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["asyncio"]},"source":"93b7735bb0b642ea.json","parameterValues":[]}