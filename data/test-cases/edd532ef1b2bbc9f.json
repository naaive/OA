{"uid":"edd532ef1b2bbc9f","name":"test_query_unsupported_network","fullName":"tests.agent_trajectory.feed_explore#test_query_unsupported_network","historyId":"13e13d95d1a9b85360863ced94c93dfd","time":{"start":1730343399324,"stop":1730343400053,"duration":729},"status":"failed","statusMessage":"AssertionError: The on_tool_end event did not occur\nassert 0 > 0","statusTrace":"feed_explorer_agent = AgentExecutor(verbose=True, agent=RunnableMultiActionAgent(runnable=RunnableAssign(mapper={\n  agent_scratchpad: Runnab...ys_arg=[], stream_runnable=True), tools=[FeedExecutor(), FeedSourceExecutor(), DeFiExecutor(), TelegramNewsExecutor()])\n\n    @pytest.mark.asyncio\n    async def test_query_unsupported_network(feed_explorer_agent):\n        events = feed_explorer_agent.astream_events(\n            {\"messages\": [HumanMessage(content=\"Show me activities on the XYZ network\", name=\"human\")]}, version=\"v1\"\n        )\n    \n        tool_end_count = 0\n        async for event in events:\n            if event[\"event\"] == \"on_tool_end\":\n                tool_end_count += 1\n                assert \"output\" in event[\"data\"]\n                assert \"Unsupported network\" in event[\"data\"][\"output\"]\n                assert \"XYZ\" in event[\"data\"][\"output\"]\n    \n>       assert tool_end_count > 0, \"The on_tool_end event did not occur\"\nE       AssertionError: The on_tool_end event did not occur\nE       assert 0 > 0\n\nagent_trajectory/feed_explore.py:92: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1730343397439,"stop":1730343397439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"feed_explorer_agent","time":{"start":1730343397439,"stop":1730343399321,"duration":1882},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop","time":{"start":1730343399322,"stop":1730343399322,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: The on_tool_end event did not occur\nassert 0 > 0","statusTrace":"feed_explorer_agent = AgentExecutor(verbose=True, agent=RunnableMultiActionAgent(runnable=RunnableAssign(mapper={\n  agent_scratchpad: Runnab...ys_arg=[], stream_runnable=True), tools=[FeedExecutor(), FeedSourceExecutor(), DeFiExecutor(), TelegramNewsExecutor()])\n\n    @pytest.mark.asyncio\n    async def test_query_unsupported_network(feed_explorer_agent):\n        events = feed_explorer_agent.astream_events(\n            {\"messages\": [HumanMessage(content=\"Show me activities on the XYZ network\", name=\"human\")]}, version=\"v1\"\n        )\n    \n        tool_end_count = 0\n        async for event in events:\n            if event[\"event\"] == \"on_tool_end\":\n                tool_end_count += 1\n                assert \"output\" in event[\"data\"]\n                assert \"Unsupported network\" in event[\"data\"][\"output\"]\n                assert \"XYZ\" in event[\"data\"][\"output\"]\n    \n>       assert tool_end_count > 0, \"The on_tool_end event did not occur\"\nE       AssertionError: The on_tool_end event did not occur\nE       assert 0 > 0\n\nagent_trajectory/feed_explore.py:92: AssertionError","steps":[],"attachments":[{"uid":"4341d58a2004b38e","name":"stdout","source":"4341d58a2004b38e.txt","type":"text/plain","size":269},{"uid":"99da162c8f59b74e","name":"stderr","source":"99da162c8f59b74e.txt","type":"text/plain","size":123}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"event_loop::3","time":{"start":1730343400057,"stop":1730343400057,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_close_event_loop","time":{"start":1730343400057,"stop":1730343400058,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_restore_policy","time":{"start":1730343400058,"stop":1730343400058,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_provide_clean_event_loop","time":{"start":1730343400058,"stop":1730343400058,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"tests.agent_trajectory"},{"name":"suite","value":"feed_explore"},{"name":"host","value":"fv-az1766-28"},{"name":"thread","value":"3583-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.agent_trajectory.feed_explore"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["asyncio"]},"source":"edd532ef1b2bbc9f.json","parameterValues":[]}