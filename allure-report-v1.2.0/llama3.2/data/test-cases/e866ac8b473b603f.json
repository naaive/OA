{"uid":"e866ac8b473b603f","name":"test_query_funding_rate[2-3]","fullName":"tests.agent_trajectory.market_analysis#test_query_funding_rate","historyId":"b03e460524e3e20a289f98580dac2a14","time":{"start":1730429125534,"stop":1730429216717,"duration":91183},"status":"failed","statusMessage":"AssertionError: assert 'invalid_tool' == 'FundingRateExecutor'\n  \n  - FundingRateExecutor\n  + invalid_tool","statusTrace":"market_analysis_agent = AgentExecutor(verbose=True, agent=RunnableMultiActionAgent(runnable=RunnableAssign(mapper={\n  agent_scratchpad: Runnab...(name='DuckDuckGoSearchExecutor'), FundingRateExecutor(), PriceExecutor(), CoinMarketExecutor(), NFTRankingExecutor()])\n\n    @pytest.mark.asyncio\n    async def test_query_funding_rate(market_analysis_agent):\n        events = market_analysis_agent.astream_events(\n            {\"messages\": [HumanMessage(content=\"What's the funding rate for BTC in binance?\", name=\"human\")]}, version=\"v1\"\n        )\n    \n        tool_end_count = 0\n        async for event in events:\n            if event[\"event\"] == \"on_tool_end\":\n                tool_end_count += 1\n                event_data_input_ = event[\"data\"][\"input\"]\n>               assert event[\"name\"] == \"FundingRateExecutor\"\nE               AssertionError: assert 'invalid_tool' == 'FundingRateExecutor'\nE                 \nE                 - FundingRateExecutor\nE                 + invalid_tool\n\nagent_trajectory/market_analysis.py:62: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1730429119024,"stop":1730429119024,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"market_analysis_agent","time":{"start":1730429119025,"stop":1730429125532,"duration":6507},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop","time":{"start":1730429125532,"stop":1730429125532,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 'invalid_tool' == 'FundingRateExecutor'\n  \n  - FundingRateExecutor\n  + invalid_tool","statusTrace":"market_analysis_agent = AgentExecutor(verbose=True, agent=RunnableMultiActionAgent(runnable=RunnableAssign(mapper={\n  agent_scratchpad: Runnab...(name='DuckDuckGoSearchExecutor'), FundingRateExecutor(), PriceExecutor(), CoinMarketExecutor(), NFTRankingExecutor()])\n\n    @pytest.mark.asyncio\n    async def test_query_funding_rate(market_analysis_agent):\n        events = market_analysis_agent.astream_events(\n            {\"messages\": [HumanMessage(content=\"What's the funding rate for BTC in binance?\", name=\"human\")]}, version=\"v1\"\n        )\n    \n        tool_end_count = 0\n        async for event in events:\n            if event[\"event\"] == \"on_tool_end\":\n                tool_end_count += 1\n                event_data_input_ = event[\"data\"][\"input\"]\n>               assert event[\"name\"] == \"FundingRateExecutor\"\nE               AssertionError: assert 'invalid_tool' == 'FundingRateExecutor'\nE                 \nE                 - FundingRateExecutor\nE                 + invalid_tool\n\nagent_trajectory/market_analysis.py:62: AssertionError","steps":[],"attachments":[{"uid":"b640d55e482f51","name":"stdout","source":"b640d55e482f51.txt","type":"text/plain","size":706},{"uid":"76072504a3c3f5","name":"stderr","source":"76072504a3c3f5.txt","type":"text/plain","size":553}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"event_loop::3","time":{"start":1730429216721,"stop":1730429216721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_close_event_loop","time":{"start":1730429216721,"stop":1730429216721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_restore_policy","time":{"start":1730429216721,"stop":1730429216722,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_provide_clean_event_loop","time":{"start":1730429216722,"stop":1730429216722,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"tests.agent_trajectory"},{"name":"suite","value":"market_analysis"},{"name":"host","value":"fv-az1152-915"},{"name":"thread","value":"6018-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.agent_trajectory.market_analysis"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"__pytest_repeat_step_number","value":"1"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["asyncio"]},"source":"e866ac8b473b603f.json","parameterValues":["1"]}