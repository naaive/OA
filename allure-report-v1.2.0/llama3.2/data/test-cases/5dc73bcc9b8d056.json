{"uid":"5dc73bcc9b8d056","name":"test_swap_eth_to_usdt[3-3]","fullName":"tests.agent_trajectory.asset_management#test_swap_eth_to_usdt","historyId":"20654169843db66fa35b9b68c4c90677","time":{"start":1730429125932,"stop":1730429159599,"duration":33667},"status":"broken","statusMessage":"pydantic_core._pydantic_core.ValidationError: 1 validation error for ParamSchema\nto_chain\n  Input should be 'ETH', 'BSC', 'ARBITRUM', 'OPTIMISM' or 'POLYGON' [type=literal_error, input_value='eth', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.8/v/literal_error","statusTrace":"asset_management_agent = AgentExecutor(verbose=True, agent=RunnableMultiActionAgent(runnable=RunnableAssign(mapper={\n  agent_scratchpad: Runnab...rg=[], stream_runnable=True), tools=[SwapExecutor(), TransferExecutor(), TokenBalanceExecutor(), NFTBalanceExecutor()])\n\n    @pytest.mark.asyncio\n    async def test_swap_eth_to_usdt(asset_management_agent):\n        events = asset_management_agent.astream_events({\"messages\": [HumanMessage(content=\"Can you swap 20 eth to usdt ?\", name=\"human\")]}, version=\"v1\")\n    \n        on_tool_end_count = 0\n    \n>       async for event in events:\n\nagent_trajectory/asset_management.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/runnables/base.py:1246: in astream_events\n    async for event in event_stream:\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/tracers/event_stream.py:778: in _astream_events_implementation_v1\n    async for log in _astream_log_implementation(  # type: ignore[misc]\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/tracers/log_stream.py:670: in _astream_log_implementation\n    await task\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/tracers/log_stream.py:624: in consume_astream\n    async for chunk in runnable.astream(input, config, **kwargs):\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain/agents/agent.py:1595: in astream\n    async for step in iterator:\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain/agents/agent_iterator.py:246: in __aiter__\n    async for chunk in self.agent_executor._aiter_next_step(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain/agents/agent.py:1360: in _aiter_next_step\n    result = await asyncio.gather(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain/agents/agent.py:1393: in _aperform_agent_action\n    observation = await tool.arun(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/tools.py:747: in arun\n    raise error_to_raise\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/tools.py:704: in arun\n    tool_args, tool_kwargs = self._to_args_and_kwargs(tool_input)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/tools.py:525: in _to_args_and_kwargs\n    tool_input = self._parse_input(tool_input)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/tools.py:478: in _parse_input\n    result = input_args.parse_obj(tool_input)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'openagent.executors.swap_executor.ParamSchema'>\nobj = {'amount': '20', 'from_chain': 'ETH', 'from_token': 'ETH', 'to_chain': 'eth', ...}\n\n    @classmethod\n    @typing_extensions.deprecated('The `parse_obj` method is deprecated; use `model_validate` instead.', category=None)\n    def parse_obj(cls, obj: Any) -> Self:  # noqa: D102\n        warnings.warn(\n            'The `parse_obj` method is deprecated; use `model_validate` instead.', category=PydanticDeprecatedSince20\n        )\n>       return cls.model_validate(obj)\nE       pydantic_core._pydantic_core.ValidationError: 1 validation error for ParamSchema\nE       to_chain\nE         Input should be 'ETH', 'BSC', 'ARBITRUM', 'OPTIMISM' or 'POLYGON' [type=literal_error, input_value='eth', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.8/v/literal_error\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/pydantic/main.py:1135: ValidationError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1730429119052,"stop":1730429119053,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"asset_management_agent","time":{"start":1730429119053,"stop":1730429125850,"duration":6797},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop","time":{"start":1730429125851,"stop":1730429125931,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"pydantic_core._pydantic_core.ValidationError: 1 validation error for ParamSchema\nto_chain\n  Input should be 'ETH', 'BSC', 'ARBITRUM', 'OPTIMISM' or 'POLYGON' [type=literal_error, input_value='eth', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.8/v/literal_error","statusTrace":"asset_management_agent = AgentExecutor(verbose=True, agent=RunnableMultiActionAgent(runnable=RunnableAssign(mapper={\n  agent_scratchpad: Runnab...rg=[], stream_runnable=True), tools=[SwapExecutor(), TransferExecutor(), TokenBalanceExecutor(), NFTBalanceExecutor()])\n\n    @pytest.mark.asyncio\n    async def test_swap_eth_to_usdt(asset_management_agent):\n        events = asset_management_agent.astream_events({\"messages\": [HumanMessage(content=\"Can you swap 20 eth to usdt ?\", name=\"human\")]}, version=\"v1\")\n    \n        on_tool_end_count = 0\n    \n>       async for event in events:\n\nagent_trajectory/asset_management.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/runnables/base.py:1246: in astream_events\n    async for event in event_stream:\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/tracers/event_stream.py:778: in _astream_events_implementation_v1\n    async for log in _astream_log_implementation(  # type: ignore[misc]\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/tracers/log_stream.py:670: in _astream_log_implementation\n    await task\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/tracers/log_stream.py:624: in consume_astream\n    async for chunk in runnable.astream(input, config, **kwargs):\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain/agents/agent.py:1595: in astream\n    async for step in iterator:\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain/agents/agent_iterator.py:246: in __aiter__\n    async for chunk in self.agent_executor._aiter_next_step(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain/agents/agent.py:1360: in _aiter_next_step\n    result = await asyncio.gather(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain/agents/agent.py:1393: in _aperform_agent_action\n    observation = await tool.arun(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/tools.py:747: in arun\n    raise error_to_raise\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/tools.py:704: in arun\n    tool_args, tool_kwargs = self._to_args_and_kwargs(tool_input)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/tools.py:525: in _to_args_and_kwargs\n    tool_input = self._parse_input(tool_input)\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/langchain_core/tools.py:478: in _parse_input\n    result = input_args.parse_obj(tool_input)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'openagent.executors.swap_executor.ParamSchema'>\nobj = {'amount': '20', 'from_chain': 'ETH', 'from_token': 'ETH', 'to_chain': 'eth', ...}\n\n    @classmethod\n    @typing_extensions.deprecated('The `parse_obj` method is deprecated; use `model_validate` instead.', category=None)\n    def parse_obj(cls, obj: Any) -> Self:  # noqa: D102\n        warnings.warn(\n            'The `parse_obj` method is deprecated; use `model_validate` instead.', category=PydanticDeprecatedSince20\n        )\n>       return cls.model_validate(obj)\nE       pydantic_core._pydantic_core.ValidationError: 1 validation error for ParamSchema\nE       to_chain\nE         Input should be 'ETH', 'BSC', 'ARBITRUM', 'OPTIMISM' or 'POLYGON' [type=literal_error, input_value='eth', input_type=str]\nE           For further information visit https://errors.pydantic.dev/2.8/v/literal_error\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/pydantic/main.py:1135: ValidationError","steps":[],"attachments":[{"uid":"49fc94a7d616a909","name":"stdout","source":"49fc94a7d616a909.txt","type":"text/plain","size":198},{"uid":"6a3d57fb52090f7d","name":"stderr","source":"6a3d57fb52090f7d.txt","type":"text/plain","size":127}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"event_loop::3","time":{"start":1730429159980,"stop":1730429159980,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_close_event_loop","time":{"start":1730429159980,"stop":1730429159980,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_restore_policy","time":{"start":1730429159980,"stop":1730429159980,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_provide_clean_event_loop","time":{"start":1730429159980,"stop":1730429159980,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"tests.agent_trajectory"},{"name":"suite","value":"asset_management"},{"name":"host","value":"fv-az1152-915"},{"name":"thread","value":"5844-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.agent_trajectory.asset_management"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"__pytest_repeat_step_number","value":"2"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["asyncio"]},"source":"5dc73bcc9b8d056.json","parameterValues":["2"]}